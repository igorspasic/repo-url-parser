repositories {
    mavenCentral()
}

apply plugin: 'java'
apply plugin: 'signing'
apply plugin: 'maven-publish'

group = 'com.oblac'
version = '1.0.1'

sourceCompatibility = 1.7
targetCompatibility = 1.7

rootProject.description = 'Repo URL parser; supports Github and Github Enterprise.'

dependencies {
    testCompile group: 'junit', name: 'junit', version: '4.+'
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}


// -----------------------------------------------------------------------------
// MAVEN


artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

signing {
    sign configurations.archives
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            customizePom(pom, rootProject)
            from components.java

            artifact sourcesJar
            artifact javadocJar

            // sign the pom
            pom.withXml {
                def pomFile = file("${project.buildDir}/generated-pom.xml")
                writeTo(pomFile)
                def pomAscFile = signing.sign(pomFile).signatureFiles[0]
                artifact(pomAscFile) {
                    classifier = null
                    extension = 'pom.asc'
                }
                pomFile.delete()
            }

            // sign the artifacts
            project.tasks.signArchives.signatureFiles.each {
                artifact(it) {
                    def matcher = it.file =~ /-(sources|javadoc)\.jar\.asc$/
                    if (matcher.find()) {
                        classifier = matcher.group(1)
                    } else {
                        classifier = null
                    }
                    extension = 'jar.asc'
                }
            }
        }
    }
    repositories {
        maven {
            url "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            credentials {
                username sonatypeUsername
                password sonatypePassword
            }
        }
    }
}

def customizePom(pom, gradleProject) {
    pom.withXml {
        def root = asNode()
        
        // eliminate test-scoped dependencies (no need in maven central POMs)
        root.dependencies.removeAll { dep ->
            dep.scope == "test"
        }

        // add all items necessary for maven central publication
        root.children().last() + {
            resolveStrategy = Closure.DELEGATE_FIRST

            description gradleProject.description
            name 'Repo URL parser'
            url 'https://github.com/igr/repo-url-parser'
            organization {
                name 'Oblac'
                url 'http://oblac.com'
            }
            issueManagement {
                system 'GitHub'
                url 'https://github.com/igr/repo-url-parser/issues'
            }
            licenses {
                license {
                    name 'The New BSD License'
                    url 'https://github.com/igr/repo-url-parser/blob/master/LICENSE'
                    distribution 'repo'
                }
            }
            scm {
                url 'https://github.com/igr/repo-url-parser/'
                connection 'scm:git:git://github.com/igr/repo-url-parser.git'
                developerConnection 'scm:git:ssh://git@github.com/igr/repo-url-parser.git'
            }
            developers {
                developer {
                    id 'igor'
                    name 'Igor SpasiÄ‡'
                    email 'igor@jodd.org'
                    timezone '+1'
                }
            }
        }
    }
}

model {
    tasks.publishMavenJavaPublicationToMavenLocal {
        dependsOn(project.tasks.signArchives)
    }
    tasks.publishMavenJavaPublicationToMavenRepository {
        dependsOn(project.tasks.signArchives)
    }
}

task install(dependsOn: publishToMavenLocal) {
    group = 'Publishing'
    description = 'Installs artifacts to local Maven repository'
}

task wrapper(type: Wrapper) {
	gradleVersion = '3.4.1'
}